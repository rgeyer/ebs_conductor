# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{ebs_conductor}
  s.version = "0.0.4"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Ryan Geyer"]
  s.date = %q{2011-07-08}
  s.description = %q{= ebs_conductor

The EBS Conductor is a library for managing Amazon Elastic Block Storage volumes and snapshots.  It is designed to persist a specific set of data (a "lineage") between different compute instances.

EBS Conductor can be used on it's own, but it's most powerful when executed on an EC2 instance using Chef, and the ebs_conductor cookbook[https://github.com/rgeyer/cookbooks/tree/master/cookbooks/ebs_conductor]

== Examples

=== Attach a new 1GB blan volume in the lineage "foobar" to a linux box at /dev/sdb1

    ebs_conductor = Rgeyer::Gem::EbsConductor.new('...','...')
    ebs_conductor.attach_from_lineage('i-abcd1234', 'foobar', 1, '/dev/sdb1')

=== Attach a specific snapshot to a 1GB volume in the lineage "foobar" to a linux box at /devb/sdb1

    ebs_conductor = Rgeyer::Gem::EbsConductor.new('...','...')
    ebs_conductor.attach_from_lineage('i-abcd1234', 'foobar', 1, '/dev/sdb1' {:snapshot_id => 'snap-abcd1234'})

=== Snapshot the lineage "foobar", do not purge any old snapshots in the lineage

    ebs_conductor = Rgeyer::Gem::EbsConductor.new('...','...')
    ebs_conductor.snapshot_lineage('foobar')

=== Snapshot the lineage "foobar", and purge old snapshots so that only 7 remain

    ebs_conductor = Rgeyer::Gem::EbsConductor.new('...','...')
    ebs_conductor.snapshot_lineage('foobar', {:history_to_keep => 7})

=== Snapshot the lineage "foobar" from the specified volume_id
This is useful if you're trying to start a lineage from a "naked" instance, or if you are trying to create a new lineage from an existing one

    ebs_conductor = Rgeyer::Gem::EbsConductor.new('...','...')
    ebs_conductor.snapshot_lineage('foobar', {:history_to_keep => 7, :volume_id => 'vol-abcd1234'})

== List of To Do Items
* Support for stripes in a lineage

== Copyright

Copyright (c) 2011 Ryan Geyer. See LICENSE.txt for
further details.

}
  s.email = %q{me@ryangeyer.com}
  s.extra_rdoc_files = [
    "LICENSE.txt",
    "README.rdoc"
  ]
  s.files = [
    ".document",
    "Gemfile",
    "LICENSE.txt",
    "NOTICE",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "ebs_conductor.gemspec",
    "lib/ebs_conductor.rb",
    "test/helper.rb"
  ]
  s.homepage = %q{http://github.com/rgeyer/ebs_conductor}
  s.licenses = ["MIT"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.6.2}
  s.summary = %q{A RightScale/Amazon EC2 EBS library}
  s.test_files = [
    "test/helper.rb"
  ]

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<fog>, ["~> 0.9.0"])
      s.add_runtime_dependency(%q<skeme>, ["~> 0.0.7"])
      s.add_runtime_dependency(%q<rest_connection>, [">= 0.0.21"])
      s.add_development_dependency(%q<shoulda>, [">= 0"])
      s.add_development_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.5.2"])
      s.add_development_dependency(%q<rcov>, [">= 0"])
    else
      s.add_dependency(%q<fog>, ["~> 0.9.0"])
      s.add_dependency(%q<skeme>, ["~> 0.0.7"])
      s.add_dependency(%q<rest_connection>, [">= 0.0.21"])
      s.add_dependency(%q<shoulda>, [">= 0"])
      s.add_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_dependency(%q<jeweler>, ["~> 1.5.2"])
      s.add_dependency(%q<rcov>, [">= 0"])
    end
  else
    s.add_dependency(%q<fog>, ["~> 0.9.0"])
    s.add_dependency(%q<skeme>, ["~> 0.0.7"])
    s.add_dependency(%q<rest_connection>, [">= 0.0.21"])
    s.add_dependency(%q<shoulda>, [">= 0"])
    s.add_dependency(%q<bundler>, ["~> 1.0.0"])
    s.add_dependency(%q<jeweler>, ["~> 1.5.2"])
    s.add_dependency(%q<rcov>, [">= 0"])
  end
end

